import telebot
from telebot import types
import pandas as pd
import requests
from matplotlib import pyplot as plt
import io
import emoji
import os

from tradingview_ta import TA_Handler, Interval

API_TOKEN = 'Token'
bot = telebot.TeleBot(API_TOKEN)

#commands
bot.delete_my_commands(scope=None, language_code=None)
bot.set_my_commands(
    commands=[
        telebot.types.BotCommand("start", "–Ω–∞—á–∞—Ç—å"),
        telebot.types.BotCommand("site", "cfqn"),
    ],

)
telebot.types.ReplyKeyboardRemove()
adminID = '645869035'


tickers = [
    "IRAO",
    "SVCB",
    "FLOT",
    "AFLT",
    "ALRS",
    "CBOM",
    "FEES",
    "GAZP",
    "GMKN",
    "GMK",
    "HYDR",
    "MSTT",
    "MTSS",
    "NLMK",
    "NVTK",
    "PLZL",
    "ROSN",
    "RTKM",
    "SBER",
    "TRNFP",
    "VTBR",
    "YDEX",
"SMLT"
]
@bot.message_handler(commands=['zametki'])
def zamet(message):
    msg = bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ –∑–∞–º–µ—Ç–∫—É')
    bot.register_next_step_handler(msg, writez)
def writez(message):
    with open('messagetip.txt', 'a', encoding='utf-8') as file:
        file.write(emoji.demojize(message.text + '\n'))
        file.close()
    with open('messagetip.txt', 'r', encoding='utf-8') as file:
        notes = file.read()
        bot.send_message(message.chat.id, f'{emoji.emojize(notes)}')

        file.close()

@bot.message_handler(commands=['redact'])
def step_two(message):
    if message.chat.id == 645869035:

        with open('messagetip.txt', 'r') as file:
            notes = file.read()
            bot.send_message(message.chat.id, f'{emoji.emojize(notes)}')
            file.close()
        os.system(r'nul>messagetip.txt')
        msg = bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∑–∞–º–µ—Ç–∫—É')
        bot.register_next_step_handler(msg, redi)



def redi(message):

    with open('messagetip.txt', 'a', encoding='utf-8') as file:

        file.write(emoji.demojize(message.text + '\n'))
        file.close()
    with open('messagetip.txt', 'r', encoding='utf-8') as file:
        notes = file.read()
        bot.send_message(message.chat.id, f'{emoji.emojize(notes)}')
        file.close()

@bot.message_handler(commands=tickers)
def draw_graph(message):
    ticker = message.text[1:]
    j = requests.get(
        f'http://iss.moex.com/iss/engines/stock/markets/shares/securities/{ticker}/candles.json?from=2024-02-02&interval=24').json()
    data = [{k: r[i] for i, k in enumerate(j['candles']['columns'])} for r in j['candles']['data']]

    frame = pd.DataFrame(data)
    plt.close('all')
    plt.clf()
    plt.rcdefaults()
    plt.switch_backend('agg')
    del frame
    frame = pd.DataFrame(data)
    plt.figure()
    plt.plot(frame['close'])
    buffer = io.BytesIO()
    plt.savefig(buffer, format='png')
    photo = io.BytesIO(buffer.getvalue())
    try:
        recom = TA_Handler(
            symbol= message.text[1:],
            screener="russia",
            exchange="MOEX",
            interval=Interval.INTERVAL_1_DAY
        )
        cost = data[-1]['close']

        buy = recom.get_analysis().summary['BUY']
        sell = recom.get_analysis().summary['SELL']
        neutral = recom.get_analysis().summary['NEUTRAL']
        bot.send_photo(message.chat.id, photo, caption=f'–¶–µ–Ω–∞: {cost}, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ Trading view:\n–ó–∞ –ø–æ–∫—É–ø–∫—É - {buy}\
    \n–ó–∞ –ø—Ä–æ–¥–∞–∂—É - {sell} \
                                                   \n–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ - {neutral}\n')
    except:
        cost = data[-1]['close']

    bot.send_photo(message.chat.id, photo, caption=f'–¶–µ–Ω–∞: {cost}, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ Trading view –Ω–∞ —ç—Ç–æ–º —Ö–æ—Å—Ç–µ –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã(')
    buffer.truncate(0)

#menubuttons
@bot.message_handler(commands=['start'])
def keyboard(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('–ó–∞–º–µ—Ç–∫–∏üòÆ')
    item2 = types.KeyboardButton('–ß–∞—Ç –¥–ª—è –ø—Ä–∏–∫–æ–ª–æ–≤üí£')
    item3 = types.KeyboardButton('–ê–∫—Ü–∏–∏ moex —Å–µ–π—á–∞—Åüìà')
    item4 = types.KeyboardButton('Git /  —Å—Ç–µ–∫')
    markup.add(item3, item1, item2, item4)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, {0.first_name}!'.format(message.from_user), reply_markup=markup)

# @bot.message_handler(func=lambda message: True)
# def forward_message(message):
#     print(f'–ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ: {message.text}')
#     channel_id = '1002048452238'
#
#     bot.forward_message(chat_id=channel_id, from_chat_id=message.chat.id, message_id=message.message_id)
#

#forfun
# @bot.message_handler(content_types=['text'])
# def all_messages(message):
#     bot.forward_message(-1002048452238, message.chat.id, message.message_id)

@bot.message_handler(content_types=['text'])
def tickers(message):
    bot.forward_message(-#–ø–µ—Ä—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π, message.chat.id, message.message_id)
    if message.text == '–ê–∫—Ü–∏–∏ moex —Å–µ–π—á–∞—Åüìà':
        bot.send_message(message.chat.id, "–ì—Ä–∞—Ñ–∏–∫–∏, —Ü–µ–Ω—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n–ù–∞–∂–º–∏ –Ω–∞ —Ç–∏–∫–µ—Ä –¥–ª—è –∫–æ—Ç–∏—Ä–æ–≤–æ–∫\n–í—Å–µ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏ —Å —Ñ–µ–≤—Ä–∞–ª—è 2024\n\
/IRAO - –ò–Ω—Ç–µ—Ä –†–∞–æ\n \
/SVCB - –°–æ–≤–∫–æ–º–±–∞–Ω–∫\n\
/FLOT - –°–æ–≤–∫–æ–º—Ñ–ª–æ—Ç\n\
/AFLT - –ê—ç—Ä–æ—Ñ–ª–æ—Ç\n\
/ALRS - –ê–õ–†–û–°–ê\n\
/CBOM - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ë–∞–Ω–∫ –ú–æ—Å–∫–≤—ã\n\
/FEES - –§–µ–¥–µ—Ä–∞–ª—å–Ω–∞—è —Å–µ—Ç–µ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è\n\
/GAZP - –ì–∞–∑–ø—Ä–æ–º\n\
/GMK - –ù–æ—Ä–∏–ª—å—Å–∫–∏–π –Ω–∏–∫–µ–ª—å\n\
/HYDR - –û–ê–û –ì–∏–¥—Ä–æ—ç–ª–µ–∫—Ç—Ä–æ—Å–µ—Ç–∏\n\
/MSTT - –ú.–í–∏–¥–µ–æ\n\
/MTSS - –ú–æ–±–∏–ª—å–Ω—ã–µ –¢–µ–ª–µ–°–∏—Å—Ç–µ–º—ã\n\
/NLMK - –ù–õ–ú–ö\n\
/NVTK - –ù–û–í–ê–¢–≠–ö\n\
/PLZL - –ü–æ–ª—é—Å\n\
/ROSN - –†–æ—Å–Ω–µ—Ñ—Ç—å\n\
/RTKM - –†–æ—Å—Ç–µ–ª–µ–∫–æ–º\n\
/SBER - –°–±–µ—Ä–±–∞–Ω–∫\n\
/TRNFP - –¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å\n\
/VTBR - –í–¢–ë\n\
/YDEX - –Ø–Ω–¥–µ–∫—Å\n\
/SMLT - –°–∞–º–æ–ª–µ—Ç \n")
    elif message.text == '–ó–∞–º–µ—Ç–∫–∏üòÆ':
        with open('messagetip.txt', 'r', encoding='utf-8') as file:
            notes = file.read()
            bot.send_message(message.chat.id, f'–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\–æ—Ç–∑—ã–≤ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –∞–Ω–æ–Ω–∏–º–Ω–æ –¥–ª—è –≤—Å–µ—Ö - –∫–æ–º–∞–Ω–¥–∞ /zametki\n\
{emoji.emojize(notes)}')
            file.close()

    elif message.text == 'Git /  —Å—Ç–µ–∫':
        bot.send_message(message.chat.id, f'–°—Ç–µ–∫:\n\
telebot, pandas, requests, matplotlib, io, emoji, os\n\
https://github.com/sergeniys')
    elif message.text == '–ß–∞—Ç –¥–ª—è –ø—Ä–∏–∫–æ–ª–æ–≤üí£':
        bot.send_message(message.chat.id, 'https://t.me/+f2mF54K9i4k5NGIy')
    elif message.text == '–ë–æ—Ç –¥–∞–π —Å–∫–∏–Ω':
        bot.send_message(message.chat.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å: 2200700886197218')
    elif message.text == '–±–æ—Ç –¥–∞–π —Å–∫–∏–Ω':
        bot.send_message(message.chat.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å: 2200700886197218')

if __name__ == '__main__':
    bot.infinity_polling()
